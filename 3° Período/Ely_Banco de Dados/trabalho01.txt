CREATE DATABASE trabalho1

USE trabalho1

CREATE TABLE marca(
	cod_marca INT PRIMARY KEY AUTO_INCREMENT,
	nome_marca VARCHAR(50)
);

CREATE TABLE produto(
	cod_prod INT PRIMARY KEY AUTO_INCREMENT,
	descricao VARCHAR(50),
	preco FLOAT,
	cod_marca INT,
	
	CONSTRAINT fk_marca
	FOREIGN KEY (cod_marca)
	REFERENCES marca(cod_marca)
);

CREATE TABLE cidade(
	cod_cidade INT PRIMARY KEY AUTO_INCREMENT,
	cidade VARCHAR(100),
	estado CHAR(2)
);

CREATE TABLE cliente(
	cod_cli INT PRIMARY KEY AUTO_INCREMENT,
	nome VARCHAR(50),
	telefone VARCHAR(50),
	cod_cidade INT,
	
	CONSTRAINT fk_cidade
	FOREIGN KEY (cod_cidade)
	REFERENCES cidade(cod_cidade)
);

CREATE TABLE venda(
	num_nota INT PRIMARY KEY,
	DATA DATE,
	quantidade INT,
	cod_prod INT,
	cod_cli INT,
	
	CONSTRAINT fk_produto
	FOREIGN KEY (cod_prod)
	REFERENCES produto(cod_prod),
	
	CONSTRAINT fk_cliente
	FOREIGN KEY (cod_cli)
	REFERENCES cliente(cod_cli)	
);

INSERT INTO marca(nome_marca)
VALUES ('Disney')

INSERT INTO marca(nome_marca)
VALUES ('Marvel')

INSERT INTO marca(nome_marca)
VALUES ('DC')

INSERT INTO marca(nome_marca)
VALUES ('Warner Bros')

INSERT INTO marca(nome_marca)
VALUES ('Universal')


SELECT * FROM marca

INSERT INTO produto(descricao, preco, cod_marca)
VALUES ('Homem de Ferro', 789.99, 2)

INSERT INTO produto(descricao, preco, cod_marca)
VALUES ('Batman', 549.99, 3)

INSERT INTO produto(descricao, preco, cod_marca)
VALUES ('Mikey', 999.99, 1)

INSERT INTO produto(descricao, preco, cod_marca)
VALUES ('Pernalonga', 899.99, 4)

SELECT * FROM produto

INSERT INTO cidade(cidade, estado)
VALUES ('São Sebastião do Paraiso', 'MG')

INSERT INTO cidade(cidade, estado)
VALUES ('Massachusetts', 'US')

INSERT INTO cidade(cidade, estado)
VALUES ('California', 'US')

INSERT INTO cidade(cidade, estado)
VALUES ('Ribeirão Preto', 'SP')

SELECT * FROM cidade

INSERT INTO cliente(nome, telefone, cod_cidade)
VALUES ('Godofredo', '16987412536', 3)

INSERT INTO cliente(nome, telefone, cod_cidade)
VALUES ('Sebastian', '21784521369', 2)

INSERT INTO cliente(nome, telefone, cod_cidade)
VALUES ('Antonio', '3521478596', 1)

INSERT INTO cliente(nome, telefone, cod_cidade)
VALUES ('Esteabn', '784596315', 4)

INSERT INTO cliente(nome, telefone, cod_cidade)
VALUES ('Joaquin', '774128963245', 4)

SELECT * FROM cliente

INSERT INTO venda(num_nota, DATA, quantidade, cod_prod, cod_cli)
VALUES(147, '2023-05-14', 4, 2, 1)

INSERT INTO venda(num_nota, DATA, quantidade, cod_prod, cod_cli)
VALUES(473, '2023-04-01', 3, 1, 2)

INSERT INTO venda(num_nota, DATA, quantidade, cod_prod, cod_cli)
VALUES(558, '2023-05-29', 8, 4, 3)

INSERT INTO venda(num_nota, DATA, quantidade, cod_prod, cod_cli)
VALUES(285, '2023-11-30', 6, 3, 4)

iNSERT INTO venda(num_nota, DATA, quantidade, cod_prod, cod_cli)
VALUES(559, '2023-05-09', 4, 4, 1)

SELECT * FROM venda

#1- Qual é o maior, o menor e a média de preço dos produtos?

SELECT MAX(preco), MIN(preco), AVG(preco) FROM produto

#2- Qual a soma do preço dos produtos vendidos da marca 'Disney'?

SELECT SUM(p.preco * v.quantidade) FROM produto p
INNER JOIN marca m ON m.cod_marca = p.cod_marca
INNER JOIN venda v ON v.cod_prod = p.cod_prod
WHERE m.nome_marca = 'Disney'

#3- Qual a quantidade de clientes cadastrados por cidade (agrupe pela cidade e estado)

SELECT ci.cidade, ci.estado, COUNT(*) FROM cidade ci
INNER JOIN cliente cd ON cd.cod_cidade = ci.cod_cidade
GROUP BY ci.cidade, ci.estado

#4- Qual a quantidade média de produtos vendidos para o estado de 'US'

SELECT AVG(v.quantidade) FROM venda v
INNER JOIN cliente c ON c.cod_cli = v.cod_cli
INNER JOIN cidade ci ON ci.cod_cidade = c.cod_cidade
WHERE ci.estado = 'US'

#5- Considere que o valor total da venda é formado pela multiplicaçao da quantidade * preço.
# Mostre a soma do valor total das vendas do mes 5 de 2023

SELECT SUM(p.preco * v.quantidade) FROM venda v
INNER JOIN produto p ON v.cod_prod = p.cod_prod
WHERE v.data >= '2023-05-01' AND v.data <= '2023-05-31'

#6- Mostre a soma do valor total das vendas agrupando pelo nome da marca

SELECT m.nome_marca, SUM(v.quantidade * p.preco) FROM marca m
INNER JOIN produto p ON m.cod_marca = p.cod_marca
INNER JOIN venda v ON p.cod_prod = v.cod_prod
GROUP BY m.nome_marca
 
 
#7 Quantos produtos tenho cadastrado por marca?

SELECT m.nome_marca, p.descricao, COUNT(p.descricao) qtd_prod FROM  marca m 
left  JOIN produto p ON m.cod_marca = p.cod_prod
GROUP BY m.nome_marca, p.descricao


#8 Mostre quais são as cidades que tem mais de 2 clientes cadastrados

SELECT c.cidade, cl.cod_cidade FROM cidade c
INNER JOIN cliente cl ON c.cod_cidade = cl.cod_cidade
GROUP BY c.cidade, cl.cod_cidade
HAVING COUNT(cl.cod_cidade) >= 2

#9 qual a media de preco dos produtos vendidos por cidade?

SELECT cd.cidade, AVG(p.preco) FROM produto p
INNER JOIN venda v ON p.cod_prod = v.cod_prod
INNER JOIN cliente c  ON c.cod_cli = v.cod_cli
INNER JOIN cidade cd ON cd.cod_cidade = c.cod_cidade
GROUP BY cd.cidade

#10 Qual o preco do produto mais barato e o preco do produto mais caro que cada cliente comprou?

SELECT c.nome, MIN(p.preco), MAX(p.preco) FROM produto p
INNER JOIN venda v ON p.cod_prod = v.cod_prod
INNER JOIN cliente c ON c.cod_cli = v.cod_cli
GROUP BY c.nome 

#11 Mostre o nome, telefone e o valor total dos produtos que o cliente comprou, mostrando apenas aqueles clientes do estado 
#"US" que tiveram um total de produtos comprados maior que 100,00.
 
 SELECT c.nome, c.telefone, SUM(p.preco * v.quantidade) FROM cliente c
 INNER JOIN venda v ON c.cod_cli = v.cod_cli
 INNER JOIN produto p ON v.cod_prod = p.cod_prod
 INNER JOIN cidade cd ON c.cod_cidade = cd.cod_cidade
 WHERE cd.estado = 'US'
 HAVING SUM(p.preco * v.quantidade) > 100
 

#1-Consulta que mostre o nome de todos os produtos e o nome das marcas relacionadas aos produtos, 
#apenas dos produtos que possuem marcas

CREATE VIEW exercicio1 AS 
SELECT p.descricao, m.nome_marca FROM produto p
INNER JOIN marca m ON m.cod_marca = p.cod_marca
GROUP BY p.descricao, m.nome_marca

SELECT * FROM exercicio1

#2- Consulta que permita mostrar a data de vendas, nome e preco dos produtos vendidos relacionados a estas vendas

CREATE VIEW exercicio2 as
SELECT v.data, p.descricao, p.preco FROM produto p
INNER JOIN venda v ON p.cod_prod = v.cod_prod
GROUP BY v.`DATA`, p.descricao, p.preco

SELECT * FROM exercicio2

#3-Consulta que permita ver o numero das vendas, nome do produto relacionado às vendas e nome da marca relacionada 
#ao produto vendido. Deve mostrar apenas vendas de produtos da marca ‘Disney’

CREATE VIEW exercicio3 AS 
SELECT v.num_nota, p.descricao, m.nome_marca FROM venda v
INNER JOIN produto p ON p.cod_prod = v.cod_prod
INNER JOIN marca m ON m.cod_marca = p.cod_prod
WHERE m.nome_marca = 'Disney'
GROUP BY v.num_nota, p.descricao, m.nome_marca

SELECT * FROM exercicio3

#4-Consulta que permita mostrar todas as vendas do mes de maio de 2023, mostrando data da venda, 
#nome do cliente comprador e descricao do produto vendido

CREATE VIEW exercicio4 as
SELECT v.data, c.nome, p.descricao FROM produto p
INNER JOIN venda v ON p.cod_prod = v.cod_prod
INNER JOIN cliente c ON c.cod_cli = v.cod_cli
WHERE DATA >= '2023-05-01' AND DATA <= '2023-05-31'
GROUP BY v.data, c.nome, p.descricao

SELECT * FROM exercicio4

#5-Consulta que permita ver a data e número das vendas e nome dos clientes. 
#Deve mostrar apenas as vendas com data entre 08/05/2023 e 09/05/2023

CREATE VIEW exercicio5 as
SELECT v.data, v.num_nota, c.nome FROM produto p
INNER JOIN venda v ON p.cod_prod = v.cod_prod
INNER JOIN cliente c ON  v.cod_cli = c.cod_cli
WHERE DATA >= '2023-05-08' AND DATA <= '2023-05-09'
GROUP BY v.data, v.num_nota, c.nome

SELECT * FROM exercicio5

#6-Consulta que mostre o número e a data de todas as vendas feitas para clientes do estado ‘US’

CREATE VIEW exercicio6 as
SELECT v.num_nota, v.data, c.nome, cd.estado FROM venda v
INNER JOIN cliente c ON c.cod_cli = v.cod_cli
INNER JOIN cidade cd ON c.cod_cidade = cd.cod_cidade
WHERE cd.estado = 'US'
GROUP BY v.num_nota, v.data, c.nome, cd.estado

SELECT * FROM exercicio6

#7- Mostre o nome de todas as marcas e a data de venda destas marcas, mostrando inclusive marcas que nunca foram vendidas.

CREATE VIEW exercicio7 as
SELECT  m.nome_marca, max(v.data) AS ultima_venda FROM marca m
LEFT JOIN produto p ON m.cod_marca = p.cod_marca
LEFT JOIN venda v ON p.cod_prod = v.cod_prod
GROUP BY m.nome_marca

SELECT * FROM exercicio7

#subSelects

SELECT * FROM produto
WHERE preco = (SELECT MAX(preco) FROM produto)

# cidades que tenha algum cliente

INSERT INTo cidade (cidade, estado)
VALUES('Guaranesia', 'MG')

SELECT * FROM cidade

SELECT * FROM cidade
WHERE cod_cidade IN (SELECT DISTINCT cod_cidade FROM cliente c)

#exercicio: tente fazer a mesma consulta anterior sem utilizar subselect

SELECT DISTINCT cd.cidade, cd.estado FROM cidade cd
inner JOIN cliente cl ON cd.cod_cidade = cl.cod_cidade
WHERE cl.cod_cidade = NULL

SELECT DISTINCT cd.cidade, cd.estado, cl.nome FROM cidade cd
LEFT JOIN cliente cl ON cd.cod_cidade = cl.cod_cidade
WHERE cl.cod_cidade IS NULL


SELECT c.cidade, c.estado FROM cidade c
WHERE NOT EXISTS (SELECT ci.nome FROM cliente ci WHERE ci.cod_cidade = c.cod_cidade)

SELECT c.cidade, c.estado FROM cidade c
WHERE EXISTS (SELECT ci.nome FROM cliente ci WHERE ci.cod_cidade = c.cod_cidade)


SELECT * FROM cliente

INSERT INTO cliente(nome, telefone)
VALUES('Lucas', '874521369')

#adicione 2 novas marcas na sua tabela

SELECT * FROM marca

INSERT INTO marca(nome_marca)
VALUES ('fox')

#mostre todas as marcas que não tenha nenhum produto

SELECT * FROM marca m
WHERE NOT EXISTS (SELECT p.cod_prod FROM produto p 
WHERE p.cod_marca = m.cod_marca)



#mostre o nome da marca que tenha a maior quantidade de produtos

INSERT INTO produto(descricao, preco, cod_marca)
VALUES ('homem-aranha', 759.99, 1)

SELECT m.nome_marca FROM marca m
WHERE (SELECT COUNT(*) from produto p 
WHERE p.cod_marca = m.cod_marca)

SELECT * FROM marca
WHERE cod_marca = (
SELECT cod_marca FROM produto p
GROUP BY cod_marca
ORDER BY COUNT(*) DESC LIMIT 1)

#mostre o preco das marcas que tiveram ao menos 1 produto vendido

SELECT p.preco, m.nome_marca produto 
INNER JOIN marca m ON m.cod_marca = p.cod_prod
WHERE  (SELECT v.quantidade FROM venda v
WHERE v.quantidade >= 1)


#Exemplos de subselect
SELECT a.nome FROM alunos a
WHERE a.cod_aluno IN
(SELECT n.cod_aluno FROM notas n WHERE n.nota >= 70)

SELECT DISTINCT a.nome FROM alunos a 
INNER JOIN notas n ON a.cod_aluno = n.cod_aluno


USE trabalho1

CREATE VIEW produtosmarca AS
SELECT p.descricao, p.preco, m.nome_marca FROM produto p
INNER JOIN marca m ON m.cod_marca = p.cod_marca

SELECT * FROM produtosmarca

